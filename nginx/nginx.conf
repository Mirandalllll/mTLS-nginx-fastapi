# nginx.conf
events {
    worker_connections 1024;
}

http{
server {
    listen 80;
    server_name localhost;  # Update with your domain name

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    server_name localhost;
    http2 on;
    #access_log /var/log/nginx/access.log vhost;
    listen 443 ssl ;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_certificate /etc/nginx/certs/server.pem;
    ssl_certificate_key /etc/nginx/certs/server-key.pem;
    ssl_client_certificate /etc/nginx/certs/ca.pem;
    ssl_verify_client on;
    ssl_verify_depth 1;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/certs/ca.pem;
    set $sts_header "";
    if ($https) {
        set $sts_header "max-age=31536000";
    }
    add_header Strict-Transport-Security $sts_header always;
    #add_header X-SSL-Cert $ssl_client_raw_cert always;  # Pass client certificate as a header
    location / {
        proxy_pass http://fastapi;
        #add_header X-SSL-Cert $ssl_client_raw_cert;  # Pass client certificate as a header
        proxy_set_header X-SSL-Cert $ssl_client_s_dn;  # Pass client certificate as a header
        set $upstream_keepalive false;
        error_page 495 =200 @ssl_verification_error;
    }


    #listen 443 ssl;
    #server_name localhost;  # Update with your domain name

    #ssl_certificate /etc/nginx/certs/server.pem;
    #ssl_certificate_key /etc/nginx/certs/server-key.pem;
    #ssl_client_certificate /etc/nginx/certs/ca.pem;
    #ssl_verify_client on;
    #ssl_verify_depth 1;

    #location / {
    #    proxy_pass http://fastapi:80;  # Point to the FastAPI container's service name
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #    proxy_set_header X-Forwarded-Proto $scheme;
        
    #    proxy_set_header X-SSL-Cert $ssl_client_raw_cert;  # Pass client certificate as a header

    #    error_page 495 =200 @ssl_verification_error;
    #}

    location @ssl_verification_error {
        return 403 "Client certificate verification failed.";
    }
}

}